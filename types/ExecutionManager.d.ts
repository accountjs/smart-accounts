/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface ExecutionManagerInterface extends ethers.utils.Interface {
  functions: {
    "addHook(address,bytes)": FunctionFragment;
    "execute(address,uint256,bytes)": FunctionFragment;
    "executeBatch(address[],uint256[],bytes[])": FunctionFragment;
    "removeRecoveror(address,address,address)": FunctionFragment;
    "sudo(address,uint256,bytes)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "addHook",
    values: [string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "execute",
    values: [string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "executeBatch",
    values: [string[], BigNumberish[], BytesLike[]]
  ): string;
  encodeFunctionData(
    functionFragment: "removeRecoveror",
    values: [string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "sudo",
    values: [string, BigNumberish, BytesLike]
  ): string;

  decodeFunctionResult(functionFragment: "addHook", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "execute", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "executeBatch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeRecoveror",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "sudo", data: BytesLike): Result;

  events: {
    "InstalledHook(address)": EventFragment;
    "UninstalledHook(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "InstalledHook"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "UninstalledHook"): EventFragment;
}

export class ExecutionManager extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: ExecutionManagerInterface;

  functions: {
    addHook(
      hook: string,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addHook(address,bytes)"(
      hook: string,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    execute(
      dest: string,
      value: BigNumberish,
      func: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "execute(address,uint256,bytes)"(
      dest: string,
      value: BigNumberish,
      func: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    executeBatch(
      dest: string[],
      value: BigNumberish[],
      func: BytesLike[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "executeBatch(address[],uint256[],bytes[])"(
      dest: string[],
      value: BigNumberish[],
      func: BytesLike[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    removeRecoveror(
      prevBeforeHook: string,
      prevAfterHook: string,
      hook: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "removeRecoveror(address,address,address)"(
      prevBeforeHook: string,
      prevAfterHook: string,
      hook: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    sudo(
      dest: string,
      value: BigNumberish,
      func: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "sudo(address,uint256,bytes)"(
      dest: string,
      value: BigNumberish,
      func: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  addHook(
    hook: string,
    data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addHook(address,bytes)"(
    hook: string,
    data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  execute(
    dest: string,
    value: BigNumberish,
    func: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "execute(address,uint256,bytes)"(
    dest: string,
    value: BigNumberish,
    func: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  executeBatch(
    dest: string[],
    value: BigNumberish[],
    func: BytesLike[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "executeBatch(address[],uint256[],bytes[])"(
    dest: string[],
    value: BigNumberish[],
    func: BytesLike[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  removeRecoveror(
    prevBeforeHook: string,
    prevAfterHook: string,
    hook: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "removeRecoveror(address,address,address)"(
    prevBeforeHook: string,
    prevAfterHook: string,
    hook: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  sudo(
    dest: string,
    value: BigNumberish,
    func: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "sudo(address,uint256,bytes)"(
    dest: string,
    value: BigNumberish,
    func: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    addHook(
      hook: string,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "addHook(address,bytes)"(
      hook: string,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    execute(
      dest: string,
      value: BigNumberish,
      func: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "execute(address,uint256,bytes)"(
      dest: string,
      value: BigNumberish,
      func: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    executeBatch(
      dest: string[],
      value: BigNumberish[],
      func: BytesLike[],
      overrides?: CallOverrides
    ): Promise<void>;

    "executeBatch(address[],uint256[],bytes[])"(
      dest: string[],
      value: BigNumberish[],
      func: BytesLike[],
      overrides?: CallOverrides
    ): Promise<void>;

    removeRecoveror(
      prevBeforeHook: string,
      prevAfterHook: string,
      hook: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "removeRecoveror(address,address,address)"(
      prevBeforeHook: string,
      prevAfterHook: string,
      hook: string,
      overrides?: CallOverrides
    ): Promise<void>;

    sudo(
      dest: string,
      value: BigNumberish,
      func: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "sudo(address,uint256,bytes)"(
      dest: string,
      value: BigNumberish,
      func: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    InstalledHook(hook: string | null): EventFilter;

    UninstalledHook(hook: string | null): EventFilter;
  };

  estimateGas: {
    addHook(
      hook: string,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "addHook(address,bytes)"(
      hook: string,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    execute(
      dest: string,
      value: BigNumberish,
      func: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "execute(address,uint256,bytes)"(
      dest: string,
      value: BigNumberish,
      func: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    executeBatch(
      dest: string[],
      value: BigNumberish[],
      func: BytesLike[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "executeBatch(address[],uint256[],bytes[])"(
      dest: string[],
      value: BigNumberish[],
      func: BytesLike[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    removeRecoveror(
      prevBeforeHook: string,
      prevAfterHook: string,
      hook: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "removeRecoveror(address,address,address)"(
      prevBeforeHook: string,
      prevAfterHook: string,
      hook: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    sudo(
      dest: string,
      value: BigNumberish,
      func: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "sudo(address,uint256,bytes)"(
      dest: string,
      value: BigNumberish,
      func: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addHook(
      hook: string,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addHook(address,bytes)"(
      hook: string,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    execute(
      dest: string,
      value: BigNumberish,
      func: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "execute(address,uint256,bytes)"(
      dest: string,
      value: BigNumberish,
      func: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    executeBatch(
      dest: string[],
      value: BigNumberish[],
      func: BytesLike[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "executeBatch(address[],uint256[],bytes[])"(
      dest: string[],
      value: BigNumberish[],
      func: BytesLike[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    removeRecoveror(
      prevBeforeHook: string,
      prevAfterHook: string,
      hook: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "removeRecoveror(address,address,address)"(
      prevBeforeHook: string,
      prevAfterHook: string,
      hook: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    sudo(
      dest: string,
      value: BigNumberish,
      func: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "sudo(address,uint256,bytes)"(
      dest: string,
      value: BigNumberish,
      func: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
