/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface SmartAccountFactoryInterface extends ethers.utils.Interface {
  functions: {
    "accountImplementation()": FunctionFragment;
    "createAccount(address[],bytes[],uint256)": FunctionFragment;
    "getAddress(address[],bytes[],uint256)": FunctionFragment;
    "handler()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "accountImplementation",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "createAccount",
    values: [string[], BytesLike[], BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getAddress",
    values: [string[], BytesLike[], BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "handler", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "accountImplementation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createAccount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getAddress", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "handler", data: BytesLike): Result;

  events: {};
}

export class SmartAccountFactory extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: SmartAccountFactoryInterface;

  functions: {
    accountImplementation(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "accountImplementation()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    createAccount(
      validators: string[],
      data: BytesLike[],
      salt: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "createAccount(address[],bytes[],uint256)"(
      validators: string[],
      data: BytesLike[],
      salt: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getAddress(
      validators: string[],
      data: BytesLike[],
      salt: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getAddress(address[],bytes[],uint256)"(
      validators: string[],
      data: BytesLike[],
      salt: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    handler(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "handler()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;
  };

  accountImplementation(overrides?: CallOverrides): Promise<string>;

  "accountImplementation()"(overrides?: CallOverrides): Promise<string>;

  createAccount(
    validators: string[],
    data: BytesLike[],
    salt: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "createAccount(address[],bytes[],uint256)"(
    validators: string[],
    data: BytesLike[],
    salt: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getAddress(
    validators: string[],
    data: BytesLike[],
    salt: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getAddress(address[],bytes[],uint256)"(
    validators: string[],
    data: BytesLike[],
    salt: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  handler(overrides?: CallOverrides): Promise<string>;

  "handler()"(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    accountImplementation(overrides?: CallOverrides): Promise<string>;

    "accountImplementation()"(overrides?: CallOverrides): Promise<string>;

    createAccount(
      validators: string[],
      data: BytesLike[],
      salt: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "createAccount(address[],bytes[],uint256)"(
      validators: string[],
      data: BytesLike[],
      salt: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getAddress(
      validators: string[],
      data: BytesLike[],
      salt: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getAddress(address[],bytes[],uint256)"(
      validators: string[],
      data: BytesLike[],
      salt: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    handler(overrides?: CallOverrides): Promise<string>;

    "handler()"(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    accountImplementation(overrides?: CallOverrides): Promise<BigNumber>;

    "accountImplementation()"(overrides?: CallOverrides): Promise<BigNumber>;

    createAccount(
      validators: string[],
      data: BytesLike[],
      salt: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "createAccount(address[],bytes[],uint256)"(
      validators: string[],
      data: BytesLike[],
      salt: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getAddress(
      validators: string[],
      data: BytesLike[],
      salt: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAddress(address[],bytes[],uint256)"(
      validators: string[],
      data: BytesLike[],
      salt: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    handler(overrides?: CallOverrides): Promise<BigNumber>;

    "handler()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    accountImplementation(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "accountImplementation()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    createAccount(
      validators: string[],
      data: BytesLike[],
      salt: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "createAccount(address[],bytes[],uint256)"(
      validators: string[],
      data: BytesLike[],
      salt: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getAddress(
      validators: string[],
      data: BytesLike[],
      salt: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAddress(address[],bytes[],uint256)"(
      validators: string[],
      data: BytesLike[],
      salt: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    handler(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "handler()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
