/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { EcdsaValidator } from "../EcdsaValidator";

export class EcdsaValidator__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<EcdsaValidator> {
    return super.deploy(overrides || {}) as Promise<EcdsaValidator>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EcdsaValidator {
    return super.attach(address) as EcdsaValidator;
  }
  connect(signer: Signer): EcdsaValidator__factory {
    return super.connect(signer) as EcdsaValidator__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EcdsaValidator {
    return new Contract(address, _abi, signerOrProvider) as EcdsaValidator;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "enable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "validateSignature",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610753806100206000396000f3fe60806040526004361061005a5760003560e01c8063971604c611610043578063971604c6146100d4578063a3f4df7e146100f5578063ffa1ad741461014b57600080fd5b80630c9595561461005f578063666e1b3914610081575b600080fd5b34801561006b57600080fd5b5061007f61007a3660046105a9565b610194565b005b34801561008d57600080fd5b506100b761009c366004610607565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e76100e2366004610629565b61022c565b6040519081526020016100cb565b34801561010157600080fd5b5061013e6040518060400160405280600f81526020017f45434453412056616c696461746f72000000000000000000000000000000000081525081565b6040516100cb9190610683565b34801561015757600080fd5b5061013e6040518060400160405280600581526020017f302e302e3100000000000000000000000000000000000000000000000000000081525081565b60006101a360148284866106d1565b6101ac916106fb565b3360008181526020819052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000811660609690961c95861790915590519394506001600160a01b0316928492849290917f381c0d11398486654573703c51ee8210ce9461764d133f9f0e53b6a5397053319190a450505050565b6001600160a01b038481166000908152602081905260408120547f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c869052603c8220919216906102b68186868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506102e892505050565b6001600160a01b0316826001600160a01b0316146102d9576001925050506102e0565b6000925050505b949350505050565b60008060006102f7858561030c565b9150915061030481610351565b509392505050565b60008082516041036103425760208301516040840151606085015160001a610336878285856104a3565b9450945050505061034a565b506000905060025b9250929050565b600081600481111561036557610365610730565b0361036d5750565b600181600481111561038157610381610730565b036103d35760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064015b60405180910390fd5b60028160048111156103e7576103e7610730565b036104345760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103ca565b600381600481111561044857610448610730565b036104a05760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103ca565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156104da575060009050600361055e565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561052e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166105575760006001925092505061055e565b9150600090505b94509492505050565b60008083601f84011261057957600080fd5b50813567ffffffffffffffff81111561059157600080fd5b60208301915083602082850101111561034a57600080fd5b600080602083850312156105bc57600080fd5b823567ffffffffffffffff8111156105d357600080fd5b6105df85828601610567565b90969095509350505050565b80356001600160a01b038116811461060257600080fd5b919050565b60006020828403121561061957600080fd5b610622826105eb565b9392505050565b6000806000806060858703121561063f57600080fd5b610648856105eb565b935060208501359250604085013567ffffffffffffffff81111561066b57600080fd5b61067787828801610567565b95989497509550505050565b600060208083528351808285015260005b818110156106b057858101830151858201604001528201610694565b506000604082860101526040601f19601f8301168501019250505092915050565b600080858511156106e157600080fd5b838611156106ee57600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156107285780818660140360031b1b83161692505b505092915050565b634e487b7160e01b600052602160045260246000fdfea164736f6c6343000813000a";
