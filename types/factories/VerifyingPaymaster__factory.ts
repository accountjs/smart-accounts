/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { VerifyingPaymaster } from "../VerifyingPaymaster";

export class VerifyingPaymaster__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _entryPoint: string,
    _signer: string,
    overrides?: Overrides
  ): Promise<VerifyingPaymaster> {
    return super.deploy(
      _entryPoint,
      _signer,
      overrides || {}
    ) as Promise<VerifyingPaymaster>;
  }
  getDeployTransaction(
    _entryPoint: string,
    _signer: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_entryPoint, _signer, overrides || {});
  }
  attach(address: string): VerifyingPaymaster {
    return super.attach(address) as VerifyingPaymaster;
  }
  connect(signer: Signer): VerifyingPaymaster__factory {
    return super.connect(signer) as VerifyingPaymaster__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VerifyingPaymaster {
    return new Contract(address, _abi, signerOrProvider) as VerifyingPaymaster;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "SignerChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "changeSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
    ],
    name: "getHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "paymasterAndData",
        type: "bytes",
      },
    ],
    name: "parsePaymasterAndData",
    outputs: [
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "senderNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "signer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516200142138038062001421833981016040819052610031916100f7565b8161003b3361008f565b6001600160a01b03908116608052600180546001600160a01b03191691831691821790556040517f5719a5656c5cfdaafa148ecf366fd3b0a7fae06449ce2a46225977fb7417e29d90600090a25050610131565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146100f457600080fd5b50565b6000806040838503121561010a57600080fd5b8251610115816100df565b6020840151909250610126816100df565b809150509250929050565b6080516112a36200017e6000396000818161029501528181610379015281816104100152818161058501528181610619015281816106900152818161071d015261092401526112a36000f3fe60806040526004361061010e5760003560e01c8063a9a23409116100a5578063c23a5cea11610074578063d0e30db011610059578063d0e30db014610301578063f2fde38b14610309578063f465c77e1461032957600080fd5b8063c23a5cea146102cc578063c399ec88146102ec57600080fd5b8063a9a2340914610243578063aad2b72314610263578063b0d691fe14610283578063bb9fe6bf146102b757600080fd5b80638da5cb5b116100e15780638da5cb5b1461019a57806394d4ad60146101b857806394e1fc19146101e85780639c90b4431461021657600080fd5b80630396cb6014610113578063205c287814610128578063238ac93314610148578063715018a614610185575b600080fd5b610126610121366004610e49565b610357565b005b34801561013457600080fd5b50610126610143366004610e8b565b6103e2565b34801561015457600080fd5b50600154610168906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561019157600080fd5b50610126610454565b3480156101a657600080fd5b506000546001600160a01b0316610168565b3480156101c457600080fd5b506101d86101d3366004610ef9565b610468565b60405161017c9493929190610f3b565b3480156101f457600080fd5b50610208610203366004610fbb565b6104a5565b60405190815260200161017c565b34801561022257600080fd5b50610208610231366004611019565b60026020526000908152604090205481565b34801561024f57600080fd5b5061012661025e366004611036565b610502565b34801561026f57600080fd5b5061012661027e366004611019565b61051c565b34801561028f57600080fd5b506101687f000000000000000000000000000000000000000000000000000000000000000081565b3480156102c357600080fd5b5061012661057b565b3480156102d857600080fd5b506101266102e7366004611019565b6105f2565b3480156102f857600080fd5b50610208610678565b610126610708565b34801561031557600080fd5b50610126610324366004611019565b61076a565b34801561033557600080fd5b50610349610344366004611096565b6107ff565b60405161017c92919061112a565b61035f610823565b604051621cb65b60e51b815263ffffffff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630396cb609034906024016000604051808303818588803b1580156103c657600080fd5b505af11580156103da573d6000803e3d6000fd5b505050505050565b6103ea610823565b60405163040b850f60e31b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063205c287890604401600060405180830381600087803b1580156103c657600080fd5b61045c610823565b610466600061087d565b565b600080368161047b60546014878961114c565b8101906104889190611176565b909450925061049a856054818961114c565b949793965094505050565b60006104b0846108da565b6001600160a01b038535166000908152600260209081526040918290205491516104e393924692309289918991016111a9565b6040516020818303038152906040528051906020012090509392505050565b61050a610919565b61051684848484610991565b50505050565b610524610823565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f5719a5656c5cfdaafa148ecf366fd3b0a7fae06449ce2a46225977fb7417e29d90600090a250565b610583610823565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105de57600080fd5b505af1158015610516573d6000803e3d6000fd5b6105fa610823565b60405163611d2e7560e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063c23a5cea90602401600060405180830381600087803b15801561065d57600080fd5b505af1158015610671573d6000803e3d6000fd5b5050505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156106df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070391906111f9565b905090565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024016000604051808303818588803b15801561065d57600080fd5b610772610823565b6001600160a01b0381166107f35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6107fc8161087d565b50565b6060600061080b610919565b6108168585856109d9565b915091505b935093915050565b6000546001600160a01b031633146104665760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107ea565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60603660006108ed610120850185611212565b915091508360208184030360405194506020810185016040528085528082602087013750505050919050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104665760405162461bcd60e51b815260206004820152601560248201527f53656e646572206e6f7420456e747279506f696e74000000000000000000000060448201526064016107ea565b60405162461bcd60e51b815260206004820152600d60248201527f6d757374206f766572726964650000000000000000000000000000000000000060448201526064016107ea565b60606000808036816109f26101d36101208b018b611212565b929650909450925090506040811480610a0b5750604181145b610a7f576040805162461bcd60e51b81526020600482015260248101919091527f566572696679696e675061796d61737465723a20696e76616c6964207369676e60448201527f6174757265206c656e67746820696e207061796d6173746572416e644461746160648201526084016107ea565b6000610ac2610a8f8b87876104a5565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b6001600160a01b038b35166000908152600260205260408120805492935090610aea83611259565b9190505550610b2f8184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610b9a92505050565b6001546001600160a01b03908116911614610b6f57610b5060018686610bbe565b604051806020016040528060008152509096509650505050505061081b565b610b7b60008686610bbe565b6040805160208101909152600081529b909a5098505050505050505050565b6000806000610ba98585610bf6565b91509150610bb681610c3b565b509392505050565b600060d08265ffffffffffff16901b60a08465ffffffffffff16901b85610be6576000610be9565b60015b60ff161717949350505050565b6000808251604103610c2c5760208301516040840151606085015160001a610c2087828585610d85565b94509450505050610c34565b506000905060025b9250929050565b6000816004811115610c4f57610c4f611280565b03610c575750565b6001816004811115610c6b57610c6b611280565b03610cb85760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016107ea565b6002816004811115610ccc57610ccc611280565b03610d195760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016107ea565b6003816004811115610d2d57610d2d611280565b036107fc5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016107ea565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610dbc5750600090506003610e40565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610e10573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610e3957600060019250925050610e40565b9150600090505b94509492505050565b600060208284031215610e5b57600080fd5b813563ffffffff81168114610e6f57600080fd5b9392505050565b6001600160a01b03811681146107fc57600080fd5b60008060408385031215610e9e57600080fd5b8235610ea981610e76565b946020939093013593505050565b60008083601f840112610ec957600080fd5b50813567ffffffffffffffff811115610ee157600080fd5b602083019150836020828501011115610c3457600080fd5b60008060208385031215610f0c57600080fd5b823567ffffffffffffffff811115610f2357600080fd5b610f2f85828601610eb7565b90969095509350505050565b600065ffffffffffff808716835280861660208401525060606040830152826060830152828460808401376000608084840101526080601f19601f850116830101905095945050505050565b60006101608284031215610f9a57600080fd5b50919050565b803565ffffffffffff81168114610fb657600080fd5b919050565b600080600060608486031215610fd057600080fd5b833567ffffffffffffffff811115610fe757600080fd5b610ff386828701610f87565b93505061100260208501610fa0565b915061101060408501610fa0565b90509250925092565b60006020828403121561102b57600080fd5b8135610e6f81610e76565b6000806000806060858703121561104c57600080fd5b84356003811061105b57600080fd5b9350602085013567ffffffffffffffff81111561107757600080fd5b61108387828801610eb7565b9598909750949560400135949350505050565b6000806000606084860312156110ab57600080fd5b833567ffffffffffffffff8111156110c257600080fd5b6110ce86828701610f87565b9660208601359650604090950135949350505050565b6000815180845260005b8181101561110a576020818501810151868301820152016110ee565b506000602082860101526020601f19601f83011685010191505092915050565b60408152600061113d60408301856110e4565b90508260208301529392505050565b6000808585111561115c57600080fd5b8386111561116957600080fd5b5050820193919092039150565b6000806040838503121561118957600080fd5b61119283610fa0565b91506111a060208401610fa0565b90509250929050565b60c0815260006111bc60c08301896110e4565b6020830197909752506001600160a01b03949094166040850152606084019290925265ffffffffffff90811660808401521660a090910152919050565b60006020828403121561120b57600080fd5b5051919050565b6000808335601e1984360301811261122957600080fd5b83018035915067ffffffffffffffff82111561124457600080fd5b602001915036819003821315610c3457600080fd5b60006001820161127957634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052602160045260246000fdfea164736f6c6343000813000a";
