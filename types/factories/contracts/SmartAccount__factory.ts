/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SmartAccount,
  SmartAccountInterface,
} from "../../contracts/SmartAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_EntryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressCannotBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotEntryPoint",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotSelf",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "ValidatorAlreadyEnabled",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedValidator",
        type: "address",
      },
      {
        internalType: "address",
        name: "returnedValidator",
        type: "address",
      },
      {
        internalType: "address",
        name: "prevValidator",
        type: "address",
      },
    ],
    name: "ValidatorAndPrevValidatorMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "ValidatorCannotBeZeroOrSentinel",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongArrayLength",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousHandler",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "handler",
        type: "address",
      },
    ],
    name: "ChangedFallbackHandler",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "DisabledValidator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "EnabledValidator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "prevValidator",
        type: "address",
      },
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "disableModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "enableValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "value",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getFallbackHandler",
    outputs: [
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "start",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "pageSize",
        type: "uint256",
      },
    ],
    name: "getValidatorsPaginated",
    outputs: [
      {
        internalType: "address[]",
        name: "array",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "next",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "defalutCallbackHandler",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "validators",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "isValidatorEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "handler",
        type: "address",
      },
    ],
    name: "setFallbackHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052306080523480156200001557600080fd5b5060405162001f5438038062001f54833981016040819052620000389162000117565b6001600160a01b03811660a0526200004f62000056565b5062000149565b600054610100900460ff1615620000c35760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161462000115576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6000602082840312156200012a57600080fd5b81516001600160a01b03811681146200014257600080fd5b9392505050565b60805160a051611da6620001ae600039600081816102c00152818161055a01528181610a6301528181610aec01528181610f51015261113a0152600081816103830152818161040d015281816106f70152818161077c01526108660152611da66000f3fe6080604052600436106100e85760003560e01c806375f251671161008a578063d087d28811610059578063d087d28814610304578063d561e48914610319578063e009cfde14610339578063f08a032314610359576100e8565b806375f2516714610239578063856dfd9914610269578063b0d691fe146102b1578063b61d27f6146102e4576100e8565b806347e1da2a116100c657806347e1da2a146101c35780634f1ef286146101e357806352d1902d146101f65780635faac46b1461020b576100e8565b80633659cfe61461014e5780633a871cdd146101705780633d6767f8146101a3575b3480156100f457600080fd5b507f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d480548061011f57005b36600080373360601b365260008060143601600080855af190503d6000803e80610148573d6000fd5b503d6000f35b34801561015a57600080fd5b5061016e61016936600461177d565b610379565b005b34801561017c57600080fd5b5061019061018b36600461179a565b6104f9565b6040519081526020015b60405180910390f35b3480156101af57600080fd5b5061016e6101be366004611837565b61051f565b3480156101cf57600080fd5b5061016e6101de3660046118d1565b61054f565b61016e6101f1366004611a0e565b6106ed565b34801561020257600080fd5b50610190610859565b34801561021757600080fd5b5061022b610226366004611a5e565b61091e565b60405161019a929190611a8a565b34801561024557600080fd5b5061025961025436600461177d565b610a18565b604051901515815260200161019a565b34801561027557600080fd5b507f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d4545b6040516001600160a01b03909116815260200161019a565b3480156102bd57600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610299565b3480156102f057600080fd5b5061016e6102ff366004611ae7565b610a58565b34801561031057600080fd5b50610190610ae8565b34801561032557600080fd5b5061016e610334366004611b43565b610b7c565b34801561034557600080fd5b5061016e610354366004611bc6565b610d6b565b34801561036557600080fd5b5061016e61037436600461177d565b610eb7565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361040b5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104667f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146104d15760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608401610402565b6104da81610f46565b604080516000808252602082019092526104f691839190610f8f565b50565b600061050361112f565b61050d84846111a9565b90506105188261126c565b9392505050565b33301461053f5760405163d97d09c160e01b815260040160405180910390fd5b61054a8383836112c5565b505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105985760405163cb10477360e01b815260040160405180910390fd5b84811415806105b1575082158015906105b15750828114155b156105cf5760405163150072e360e11b815260040160405180910390fd5b600083900361067b5760005b858110156106755761066d8787838181106105f8576105f8611bff565b905060200201602081019061060d919061177d565b600085858581811061062157610621611bff565b90506020028101906106339190611c15565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061144792505050565b6001016105db565b506106e5565b60005b858110156106e3576106db87878381811061069b5761069b611bff565b90506020020160208101906106b0919061177d565b8686848181106106c2576106c2611bff565b9050602002013585858581811061062157610621611bff565b60010161067e565b505b505050505050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361077a5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608401610402565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166107d57f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146108405760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608401610402565b61084982610f46565b61085582826001610f8f565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108f95760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610402565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b606060008267ffffffffffffffff81111561093b5761093b61196b565b604051908082528060200260200182016040528015610964578160200160208202803683370190505b506001600160a01b0380861660009081526001602052604081205492945091165b6001600160a01b038116158015906109a757506001600160a01b038116600114155b80156109b257508482105b15610a0a57808483815181106109ca576109ca611bff565b6001600160a01b03928316602091820292909201810191909152918116600090815260019092526040909120541681610a0281611c5c565b925050610985565b908352919491935090915050565b600060016001600160a01b03831614801590610a4d57506001600160a01b038281166000908152600160205260409020541615155b92915050565b905090565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610aa15760405163cb10477360e01b815260040160405180910390fd5b610ae2848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061144792505050565b50505050565b60007f0000000000000000000000000000000000000000000000000000000000000000604051631aab3f0d60e11b8152306004820152600060248201526001600160a01b0391909116906335567e1a90604401602060405180830381865afa158015610b58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a539190611c83565b600054610100900460ff1615808015610b9c5750600054600160ff909116105b80610bb65750303b158015610bb6575060005460ff166001145b610c285760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610402565b6000805460ff191660011790558015610c4b576000805461ff0019166101001790555b838214610c6b5760405163150072e360e11b815260040160405180910390fd5b610c74866114b7565b610cb76001600081905260208190527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f80546001600160a01b0319169091179055565b60005b84811015610d1d57610d15868683818110610cd757610cd7611bff565b9050602002016020810190610cec919061177d565b858584818110610cfe57610cfe611bff565b9050602002810190610d109190611c15565b6112c5565b600101610cba565b5080156106e5576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050505050565b333014610d8b5760405163d97d09c160e01b815260040160405180910390fd5b6001600160a01b0381161580610daa57506001600160a01b0381166001145b15610dd35760405163cd05754960e01b81526001600160a01b0382166004820152602401610402565b6001600160a01b03828116600090815260016020526040902054811690821614610e3b576001600160a01b038281166000818152600160205260409081902054905163502c6b8f60e11b81528484166004820152921660248301526044820152606401610402565b6001600160a01b038181166000818152600160209081526040808320805488871685528285208054919097166001600160a01b03199182161790965592849052825490941690915591519081527fae2356b2cb822c142448e45b195255df334895b014113d50bb822c311cddc855910160405180910390a15050565b333014610ed75760405163d97d09c160e01b815260040160405180910390fd5b7f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d454610f02826114b7565b816001600160a01b0316816001600160a01b03167f06be9a1bea257286cf2afa8205ed494ca9d6a4b41aa58d04238deebada20fb0c60405160405180910390a35050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104f65760405163cb10477360e01b815260040160405180910390fd5b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610fc25761054a83611502565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561101c575060408051601f3d908101601f1916820190925261101991810190611c83565b60015b61108e5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608401610402565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146111235760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152608401610402565b5061054a8383836115c0565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146111a75760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152606401610402565b565b600080806111bb610140860186611c15565b8101906111c89190611a0e565b915091506111d582610a18565b6111e457600192505050610a4d565b6001600160a01b03821663971604c6611200602088018861177d565b86846040518463ffffffff1660e01b815260040161122093929190611cec565b6020604051808303816000875af115801561123f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112639190611c83565b95945050505050565b80156104f657604051600090339060001990849084818181858888f193505050503d80600081146112b9576040519150601f19603f3d011682016040523d82523d6000602084013e6112be565b606091505b5050505050565b6001600160a01b03831615806112e457506001600160a01b0383166001145b1561130d5760405163cd05754960e01b81526001600160a01b0384166004820152602401610402565b6001600160a01b038381166000908152600160205260409020541615611351576040516301f4645760e71b81526001600160a01b0384166004820152602401610402565b600160208190527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f80546001600160a01b03868116600081815260408082208054949095166001600160a01b0319948516179094559490945282541683179091555163064acaab60e11b8152630c959556906113d39085908590600401611d14565b600060405180830381600087803b1580156113ed57600080fd5b505af1158015611401573d6000803e3d6000fd5b50506040516001600160a01b03861681527f702ed4645b59645b8a8b7dd88e069cb684a1170094eca847038827e03c1107a49250602001905060405180910390a1505050565b600080846001600160a01b031684846040516114639190611d43565b60006040518083038185875af1925050503d80600081146114a0576040519150601f19603f3d011682016040523d82523d6000602084013e6114a5565b606091505b5091509150816112be57805160208201fd5b6001600160a01b0381166114de576040516303988b8160e61b815260040160405180910390fd5b7f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d455565b6001600160a01b0381163b61157f5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610402565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6115c9836115e5565b6000825111806115d65750805b1561054a57610ae28383611625565b6115ee81611502565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606105188383604051806060016040528060278152602001611d73602791396060600080856001600160a01b0316856040516116629190611d43565b600060405180830381855af49150503d806000811461169d576040519150601f19603f3d011682016040523d82523d6000602084013e6116a2565b606091505b50915091506116b3868383876116bd565b9695505050505050565b6060831561172c578251600003611725576001600160a01b0385163b6117255760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610402565b5081611736565b611736838361173e565b949350505050565b81511561174e5781518083602001fd5b8060405162461bcd60e51b81526004016104029190611d5f565b6001600160a01b03811681146104f657600080fd5b60006020828403121561178f57600080fd5b813561051881611768565b6000806000606084860312156117af57600080fd5b833567ffffffffffffffff8111156117c657600080fd5b840161016081870312156117d957600080fd5b95602085013595506040909401359392505050565b60008083601f84011261180057600080fd5b50813567ffffffffffffffff81111561181857600080fd5b60208301915083602082850101111561183057600080fd5b9250929050565b60008060006040848603121561184c57600080fd5b833561185781611768565b9250602084013567ffffffffffffffff81111561187357600080fd5b61187f868287016117ee565b9497909650939450505050565b60008083601f84011261189e57600080fd5b50813567ffffffffffffffff8111156118b657600080fd5b6020830191508360208260051b850101111561183057600080fd5b600080600080600080606087890312156118ea57600080fd5b863567ffffffffffffffff8082111561190257600080fd5b61190e8a838b0161188c565b9098509650602089013591508082111561192757600080fd5b6119338a838b0161188c565b9096509450604089013591508082111561194c57600080fd5b5061195989828a0161188c565b979a9699509497509295939492505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261199257600080fd5b813567ffffffffffffffff808211156119ad576119ad61196b565b604051601f8301601f19908116603f011681019082821181831017156119d5576119d561196b565b816040528381528660208588010111156119ee57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215611a2157600080fd5b8235611a2c81611768565b9150602083013567ffffffffffffffff811115611a4857600080fd5b611a5485828601611981565b9150509250929050565b60008060408385031215611a7157600080fd5b8235611a7c81611768565b946020939093013593505050565b604080825283519082018190526000906020906060840190828701845b82811015611acc5781516001600160a01b031684529284019290840190600101611aa7565b5050506001600160a01b039490941692019190915250919050565b60008060008060608587031215611afd57600080fd5b8435611b0881611768565b935060208501359250604085013567ffffffffffffffff811115611b2b57600080fd5b611b37878288016117ee565b95989497509550505050565b600080600080600060608688031215611b5b57600080fd5b8535611b6681611768565b9450602086013567ffffffffffffffff80821115611b8357600080fd5b611b8f89838a0161188c565b90965094506040880135915080821115611ba857600080fd5b50611bb58882890161188c565b969995985093965092949392505050565b60008060408385031215611bd957600080fd5b8235611be481611768565b91506020830135611bf481611768565b809150509250929050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611c2c57600080fd5b83018035915067ffffffffffffffff821115611c4757600080fd5b60200191503681900382131561183057600080fd5b600060018201611c7c57634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215611c9557600080fd5b5051919050565b60005b83811015611cb7578181015183820152602001611c9f565b50506000910152565b60008151808452611cd8816020860160208601611c9c565b601f01601f19169290920160200192915050565b6001600160a01b03841681528260208201526060604082015260006112636060830184611cc0565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60008251611d55818460208701611c9c565b9190910192915050565b6020815260006105186020830184611cc056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c6343000813000a";

type SmartAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SmartAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SmartAccount__factory extends ContractFactory {
  constructor(...args: SmartAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _EntryPoint: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_EntryPoint, overrides || {});
  }
  override deploy(
    _EntryPoint: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_EntryPoint, overrides || {}) as Promise<
      SmartAccount & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SmartAccount__factory {
    return super.connect(runner) as SmartAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SmartAccountInterface {
    return new Interface(_abi) as SmartAccountInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SmartAccount {
    return new Contract(address, _abi, runner) as unknown as SmartAccount;
  }
}
