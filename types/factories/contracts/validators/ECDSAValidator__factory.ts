/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ECDSAValidator,
  ECDSAValidatorInterface,
} from "../../../contracts/validators/ECDSAValidator";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "enable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "validateSignature",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610640806100206000396000f3fe6080604052600436106100345760003560e01c80630c95955614610039578063666e1b391461005b578063971604c6146100ae575b600080fd5b34801561004557600080fd5b506100596100543660046104e4565b6100cf565b005b34801561006757600080fd5b50610091610076366004610542565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c16100bc366004610564565b610167565b6040519081526020016100a5565b60006100de60148284866105be565b6100e7916105e8565b3360008181526020819052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000811660609690961c95861790915590519394506001600160a01b0316928492849290917f381c0d11398486654573703c51ee8210ce9461764d133f9f0e53b6a5397053319190a450505050565b6001600160a01b038481166000908152602081905260408120547f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c869052603c8220919216906101f18186868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061022392505050565b6001600160a01b0316826001600160a01b0316146102145760019250505061021b565b6000925050505b949350505050565b60008060006102328585610247565b9150915061023f8161028c565b509392505050565b600080825160410361027d5760208301516040840151606085015160001a610271878285856103de565b94509450505050610285565b506000905060025b9250929050565b60008160048111156102a0576102a061061d565b036102a85750565b60018160048111156102bc576102bc61061d565b0361030e5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064015b60405180910390fd5b60028160048111156103225761032261061d565b0361036f5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610305565b60038160048111156103835761038361061d565b036103db5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610305565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156104155750600090506003610499565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610469573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661049257600060019250925050610499565b9150600090505b94509492505050565b60008083601f8401126104b457600080fd5b50813567ffffffffffffffff8111156104cc57600080fd5b60208301915083602082850101111561028557600080fd5b600080602083850312156104f757600080fd5b823567ffffffffffffffff81111561050e57600080fd5b61051a858286016104a2565b90969095509350505050565b80356001600160a01b038116811461053d57600080fd5b919050565b60006020828403121561055457600080fd5b61055d82610526565b9392505050565b6000806000806060858703121561057a57600080fd5b61058385610526565b935060208501359250604085013567ffffffffffffffff8111156105a657600080fd5b6105b2878288016104a2565b95989497509550505050565b600080858511156105ce57600080fd5b838611156105db57600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156106155780818660140360031b1b83161692505b505092915050565b634e487b7160e01b600052602160045260246000fdfea164736f6c6343000813000a";

type ECDSAValidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ECDSAValidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ECDSAValidator__factory extends ContractFactory {
  constructor(...args: ECDSAValidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ECDSAValidator & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ECDSAValidator__factory {
    return super.connect(runner) as ECDSAValidator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ECDSAValidatorInterface {
    return new Interface(_abi) as ECDSAValidatorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ECDSAValidator {
    return new Contract(address, _abi, runner) as unknown as ECDSAValidator;
  }
}
