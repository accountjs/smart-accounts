/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Secp256r1,
  Secp256r1Interface,
} from "../../../../contracts/validators/p256/Secp256r1";

const _abi = [
  {
    inputs: [],
    name: "nn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "message",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "publicKey",
        type: "bytes",
      },
    ],
    name: "validateSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610aca806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806372a4c30f1461004657806391327ec61461007d578063ae7e17f014610098575b600080fd5b61006a7bffffffff00000000000000004319055258e8617b0c46353d039cdaae1981565b6040519081526020015b60405180910390f35b61006a6ffffffffeffffffffffffffffffffffff60601b1981565b6100ab6100a63660046109cb565b6100bb565b6040519015158152602001610074565b60006100c561091a565b6100d185870187610a45565b60208301528082527bffffffff00000000000000004319055258e8617b0c46353d039cdaae19111580610125575060208101517bffffffff00000000000000004319055258e8617b0c46353d039cdaae1911155b8061012f57508051155b8061013c57506020810151155b1561014b576000915050610192565b61015361091a565b61015f84860186610a45565b602083018190528183526000916101759161019b565b8351602085015191925061018c918391908c61037c565b93505050505b95945050505050565b6101a3610938565b604051806060016040528060008152602001600081526020016000815250816000601081106101d4576101d4610a67565b6020020181905250604051806060016040528084815260200183815260200160018152508160016010811061020b5761020b610a67565b60200201526102218160015b602002015161046a565b60408201526102408160015b60200201518260025b60200201516104cc565b6060828101919091526040805191820181527f6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c29682527f4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5602083015260019082015260808201526102ba8160045b6020020151826001610236565b60a08201526102ca81600461022d565b60c08201526102e38160045b6020020151826003610236565b60e08201526102f3816004610217565b6101008201526103048160086102ad565b61012082015261031581600861022d565b6101408201526103268160086102d6565b610160820152608081015161033d90826008610236565b61018082015261034e81600c6102ad565b6101a082015261035f81600c61022d565b6101c082015261037081600c6102d6565b6101e082015292915050565b60007bffffffff00000000000000004319055258e8617b0c46353d039cdaae19841015806103c757507bffffffff00000000000000004319055258e8617b0c46353d039cdaae198310155b156103d457506000610462565b60006103fd847bffffffff00000000000000004319055258e8617b0c46353d039cdaae19610540565b905060007bffffffff00000000000000004319055258e8617b0c46353d039cdaae19828509905060007bffffffff00000000000000004319055258e8617b0c46353d039cdaae1983880990506000806104578a858561055e565b508914955050505050505b949350505050565b61048e60405180606001604052806000815260200160008152602001600081525090565b60008060006104aa85600001518660200151876040015161064a565b6040805160608101825293845260208401929092529082015295945050505050565b6104f060405180606001604052806000815260200160008152602001600081525090565b600080600061051b866000015187602001518860400151886000015189602001518a60400151610705565b6040805160608101825293845260208401929092529082015293505050505b92915050565b600061055783610551600285610a93565b84610831565b9392505050565b6000808080806080815b811561062c5782156105995761057f85858561064a565b9196509450925061059185858561064a565b919650945092505b50600c60fc89901c1660fe88901c17801561060f576106078585858d85601081106105c6576105c6610a67565b6020020151518e86601081106105de576105de610a67565b6020020151602001518f87601081106105f9576105f9610a67565b602002015160400151610705565b919650945092505b600298891b989790971b968161062481610aa6565b925050610568565b610637858585610885565b909750955050505050505b935093915050565b60008060006ffffffffeffffffffffffffffffffffff60601b198085860981828283097fffffffff00000001000000000000000000000000fffffffffffffffffffffffc099050818788098283828b0960040983848384096008099150838385868d8e09600309089250838160020984848509818110156106c85785015b039650868110156106d65783015b838782038409955050808510156106ec57938201935b9093039250808086880960020991505093509350939050565b60008060008660000361071f575084915083905082610825565b83600003610734575087915086905085610825565b6ffffffffeffffffffffffffffffffffff60601b19808889098186870982818d0983838b0984858a85098e0985868e87098c09868b8f088484101561077857928701925b84840393508784600209888182099050888186098484101561079957928901925b898585036002099350898485099c50898288099650898a8860020982089150818d10156107c5579b89019b5b818d039c5089818b87600209099450508b8610156107e257948801945b888c870384099a50838b10156107f757998801995b838b039a50888789089750888283099050878110156108135788015b88858983030999505050505050505050505b96509650969350505050565b6000818411156108415781840693505b60405160208152602080820152602060408201528460608201528360808201528260a082015260208160c08360056105dcfa80801561004157505051949350505050565b6000808260000361089b57506000905080610642565b60006108bb846ffffffffeffffffffffffffffffffffff60601b19610540565b905060006ffffffffeffffffffffffffffffffffff60601b1982830990506ffffffffeffffffffffffffffffffffff60601b1981880993506ffffffffeffffffffffffffffffffffff60601b1980838309870992505050935093915050565b60405180604001604052806002906020820280368337509192915050565b6040518061020001604052806010905b61096c60405180606001604052806000815260200160008152602001600081525090565b8152602001906001900390816109485790505090565b60008083601f84011261099457600080fd5b50813567ffffffffffffffff8111156109ac57600080fd5b6020830191508360208285010111156109c457600080fd5b9250929050565b6000806000806000606086880312156109e357600080fd5b85359450602086013567ffffffffffffffff80821115610a0257600080fd5b610a0e89838a01610982565b90965094506040880135915080821115610a2757600080fd5b50610a3488828901610982565b969995985093965092949392505050565b60008060408385031215610a5857600080fd5b50508035926020909101359150565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561053a5761053a610a7d565b600081610ab557610ab5610a7d565b50600019019056fea164736f6c6343000813000a";

type Secp256r1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Secp256r1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Secp256r1__factory extends ContractFactory {
  constructor(...args: Secp256r1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<Secp256r1> {
    return super.deploy(overrides || {}) as Promise<Secp256r1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Secp256r1 {
    return super.attach(address) as Secp256r1;
  }
  override connect(signer: Signer): Secp256r1__factory {
    return super.connect(signer) as Secp256r1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Secp256r1Interface {
    return new utils.Interface(_abi) as Secp256r1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Secp256r1 {
    return new Contract(address, _abi, signerOrProvider) as Secp256r1;
  }
}
